searchState.loadedDescShard("popdat", 0, "popdat (“population data”) generates <code>Scenarios</code> given a …\nDifferent things people might do in the day. Maybe it’s …\nRepresents aggregate demographic data for some part of a …\nDemographic information for a single person\nAny arbitrarily chosen parameters needed should be put …\nIt might be useful to classify a CensusPerson into …\nA single person’s daily schedule. It’s assumed that …\nStarting from some number of total people living in a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWires together all the pieces, so you can just hand this …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is a standalone pipeline for generating a Scenario, …\nStarting from some number of total people living in a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nKeep all zones. When looking at desire lines between two …\nThis describes some number of commuters living in some …\nOnly desire lines starting and ending in zones matching …\nKeep zones that at least partially overlap the map’s …\nA normal distribution of Durations.\nWhen should somebody depart from home to work?\nGenerates a scenario from aggregated origin/destination …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns endpoints to (leave home, goto home). These’re …\nReturns endpoints to (leave work, goto work). These’re …\nHow long should somebody work before returning home?")