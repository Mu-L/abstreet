searchState.loadedDescShard("headless", 0, "This runs a simulation without any graphics and serves a …\nEach entry indicates that some agent has been stuck in one …\nThe distance crossed so far by the agent, in meters. There …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe agent’s ID\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhat IP to run the JSON API on.\nNone for buses\nWhat port to run the JSON API on.\nThe agent’s current position. For pedestrians, this is …\nAn arbitrary number to seed the random number generator. …\nIf specified, start with this scenario loaded instead of …\nNone for buses\nNone for pedestrians")