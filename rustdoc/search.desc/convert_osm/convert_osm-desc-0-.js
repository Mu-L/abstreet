searchState.loadedDescShard("convert_osm", 0, "If OSM data is missing, then try to match data from …\nPull data from …\nIf not tagged, there won’t be parking.\nWhat roads will have on-street parking lanes? Data from …\nConfigures the creation of a <code>RawMap</code> from OSM and other …\nIf a building doesn’t have anything from …\nHow many spots are available in public parking garages?\nCreate a RawMap from OSM and other input data.\nPath to a GeoTIFF file in EPSG:4326 to use for elevation …\nIf provided, read polygons from this GeoJSON file and add …\nOnly include crosswalks that match a <code>highway=crossing</code> OSM …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConfigure public transit using this URL to a static GTFS …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSome kind of barrier nodes at these points.\nCrossings located at these points, which should be on a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")