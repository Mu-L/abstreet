searchState.loadedDescShard("fifteen_min", 0, "Custom per-app state can be stored here\nThis is a tool to experiment with the concept of 15-minute …\nIf desired, this can be advanced to render traffic signals …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n(building, scale factor)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents the area reachable from all intersections on …\nRepresents the area reachable from a single building.\nThe constraints on how we’re moving.\nPer category of amenity, what buildings have that?\nColors used to draw the isochrone\nColors used to draw the isochrone\nColored polygon contours, uploaded to the GPU and ready …\nColored polygon contours, uploaded to the GPU and ready …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHow many sreet parking spots are on the same road as any …\nThe options used to generate this isochrone\nThe options used to generate this isochrone\nHow many people live in the returned area, according to …\nThe center of the isochrone (can be multiple points)\nThe center of the isochrone (can be multiple points)\nThresholds used to draw the isochrone\nThresholds used to draw the isochrone\nHow far away is each building from the start?\nHow far away is each building from the start?\nCalculate the quickest time to reach buildings across the …\nAsk what types of amenities are necessary to be within a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFor every house in the map, return the number of amenity …\nThis is the UI state for exploring the isochrone/walkshed …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStart with a random building")